version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    volumes:
      - ./zk-server/data:/data
    ports:
      - 2181:2181

  kafka1:
    image: wurstmeister/kafka
    ports:
      - 9001:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.3.35:9001
      KAFKA_CREATE_TOPICS: "mytopic:2:0" #kafka启动后初始化一个有2个partition(分区)0个副本名叫kafeidou的topic
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - ./kafka-server/9001/kafka-logs:/data/kafka-data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  kafka2:
    image: wurstmeister/kafka
    ports:
      - 9002:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.3.35:9002
      KAFKA_CREATE_TOPICS: "mytopic:2:0" #kafka启动后初始化一个有2个partition(分区)0个副本名叫kafeidou的topic
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - ./kafka-server/9002/kafka-logs:/data/kafka-data
    depends_on:
      - zookeeper

  kafka3:
    image: wurstmeister/kafka
    ports:
      - 9003:9092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.3.35:9003
      KAFKA_CREATE_TOPICS: "mytopic:2:0" #kafka启动后初始化一个有2个partition(分区)0个副本名叫kafeidou的topic
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_LOG_DIRS: /data/kafka-data
    volumes:
      - ./kafka-server/9003/kafka-logs:/data/kafka-data
    depends_on:
      - zookeeper
